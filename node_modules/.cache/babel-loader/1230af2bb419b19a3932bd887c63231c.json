{"ast":null,"code":"var _jsxFileName = \"/Users/ian/Downloads/Code/GitStuff/my-timer/src/components/Timer/Timer.js\";\nimport React from 'react';\nimport Countdown from 'react-countdown';\nimport './Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.a = new AudioContext();\n  }\n\n  beep(vol, freq, duration) {\n    v = a.createOscillator();\n    u = a.createGain();\n    v.connect(u);\n    v.frequency.value = freq;\n    v.type = \"square\";\n    u.connect(a.destination);\n    u.gain.value = vol * 0.01;\n    v.start(a.currentTime);\n    v.stop(a.currentTime + duration * 0.001);\n  }\n\n  complete() {\n    console.log('Done!');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Countdown, {\n      className: \"timer\",\n      date: Date.now() + 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/ian/Downloads/Code/GitStuff/my-timer/src/components/Timer/Timer.js"],"names":["React","Countdown","Timer","Component","a","AudioContext","beep","vol","freq","duration","v","createOscillator","u","createGain","connect","frequency","value","type","destination","gain","start","currentTime","stop","complete","console","log","render","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,CADkC,GAChC,IAAIC,YAAJ,EADgC;AAAA;;AAElCC,EAAAA,IAAI,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAsB;AACxBC,IAAAA,CAAC,GAACN,CAAC,CAACO,gBAAF,EAAF;AACAC,IAAAA,CAAC,GAACR,CAAC,CAACS,UAAF,EAAF;AACAH,IAAAA,CAAC,CAACI,OAAF,CAAUF,CAAV;AACAF,IAAAA,CAAC,CAACK,SAAF,CAAYC,KAAZ,GAAkBR,IAAlB;AACAE,IAAAA,CAAC,CAACO,IAAF,GAAO,QAAP;AACAL,IAAAA,CAAC,CAACE,OAAF,CAAUV,CAAC,CAACc,WAAZ;AACAN,IAAAA,CAAC,CAACO,IAAF,CAAOH,KAAP,GAAaT,GAAG,GAAC,IAAjB;AACAG,IAAAA,CAAC,CAACU,KAAF,CAAQhB,CAAC,CAACiB,WAAV;AACAX,IAAAA,CAAC,CAACY,IAAF,CAAOlB,CAAC,CAACiB,WAAF,GAAcZ,QAAQ,GAAC,KAA9B;AACD;;AACDc,EAAAA,QAAQ,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAA6B,MAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxBiC;;AA2BpC,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport Countdown from 'react-countdown';\nimport './Timer.css';\n\nclass Timer extends React.Component {\n  a=new AudioContext()\n  beep(vol, freq, duration) {\n    v=a.createOscillator()\n    u=a.createGain()\n    v.connect(u)\n    v.frequency.value=freq\n    v.type=\"square\"\n    u.connect(a.destination)\n    u.gain.value=vol*0.01\n    v.start(a.currentTime)\n    v.stop(a.currentTime+duration*0.001)\n  }\n  complete() {\n    console.log('Done!');\n  }\n\n  render() {\n    return (\n      <Countdown className='timer' date={Date.now() + 5000}>\n        {/* <audio src='http://codeskulptor-demos.commondatastorage.googleapis.com/GalaxyInvaders/pause.wav'></audio> */}\n        {/* {new Audio('http://codeskulptor-demos.commondatastorage.googleapis.com/GalaxyInvaders/pause.wav').play()} */}\n      </Countdown>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}