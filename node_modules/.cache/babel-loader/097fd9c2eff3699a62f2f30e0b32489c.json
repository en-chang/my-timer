{"ast":null,"code":"var _jsxFileName = \"/Users/ian/Downloads/Code/GitStuff/my-timer/src/components/Timer/Timer.js\";\nimport React from 'react';\nimport Countdown from 'react-countdown';\nimport './Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderer = ({\n      hours,\n      minutes,\n      seconds,\n      completed\n    }) => {\n      if (completed) {\n        // Render a completed state\n        return this.complete;\n      } else {\n        // Render a countdown\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [hours, \":\", minutes, \":\", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  complete() {\n    console.log('Done!'); // new Audio('http://codeskulptor-demos.commondatastorage.googleapis.com/GalaxyInvaders/pause.wav').play();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Countdown className='timer' date={Date.now() + 5000}>\n      //   {/* Sound on completion */}\n      // </Countdown>\n      _jsxDEV(Countdown, {\n        className: \"timer\",\n        date: Date.now() + 5000,\n        renderer: this.renderer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/ian/Downloads/Code/GitStuff/my-timer/src/components/Timer/Timer.js"],"names":["React","Countdown","Timer","Component","renderer","hours","minutes","seconds","completed","complete","console","log","render","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAMlCC,QANkC,GAMvB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA;AAA3B,KAAD,KAA4C;AACrD,UAAIA,SAAJ,EAAe;AACb;AACA,eAAO,KAAKC,QAAZ;AACD,OAHD,MAGO;AACL;AACA,4BAAO;AAAA,qBAAOJ,KAAP,OAAeC,OAAf,OAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAdiC;AAAA;;AAClCE,EAAAA,QAAQ,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADS,CAET;AACD;;AAYDC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA,cAAC,SAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa,IAFrB;AAGE,QAAA,QAAQ,EAAE,KAAKV;AAHjB;AAAA;AAAA;AAAA;AAAA;AAJF;AAUD;;AA3BiC;;AA8BpC,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport Countdown from 'react-countdown';\nimport './Timer.css';\n\nclass Timer extends React.Component {\n  complete() {\n    console.log('Done!');\n    // new Audio('http://codeskulptor-demos.commondatastorage.googleapis.com/GalaxyInvaders/pause.wav').play();\n  }\n\n  renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return this.complete\n    } else {\n      // Render a countdown\n      return <span>{hours}:{minutes}:{seconds}</span>;\n    }\n  };\n\n  render() {\n    return (\n      // <Countdown className='timer' date={Date.now() + 5000}>\n      //   {/* Sound on completion */}\n      // </Countdown>\n      <Countdown\n        className='timer'\n        date={Date.now() + 5000}\n        renderer={this.renderer}\n      />\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}